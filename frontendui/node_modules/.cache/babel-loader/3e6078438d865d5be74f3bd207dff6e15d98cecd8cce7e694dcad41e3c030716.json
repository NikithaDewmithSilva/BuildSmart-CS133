{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Azely Athas\\\\OneDrive\\\\Documents\\\\BuildSmart-CS133\\\\frontendui\\\\src\\\\Components\\\\ProjectModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./ProjectModal.css\";\nimport { supabase } from \"../supabase\";\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectModal = ({\n  isOpen,\n  closeModal\n}) => {\n  _s();\n  const [projectName, setProjectName] = useState('');\n  const [projectDescription, setProjectDescription] = useState('');\n  const [userId, setUserId] = useState(null);\n  const [message, setMessage] = useState('');\n  const [formData, setFormData] = useState({\n    projectName: \"\",\n    projectDescription: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  useEffect(() => {\n    const fetchUser = async () => {\n      const {\n        data: {\n          session\n        }\n      } = await supabase.auth.getSession();\n      if (session && session.user) {\n        setUserId(session.user.id);\n      }\n    };\n    fetchUser();\n\n    // Set up subscription for auth changes\n    const {\n      data: authListener\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      if (session && session.user) {\n        setUserId(session.user.id);\n      } else {\n        setUserId(null);\n      }\n    });\n\n    // Clean up subscription on unmount\n    return () => {\n      if (authListener && authListener.subscription) {\n        authListener.subscription.unsubscribe();\n      }\n    };\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.projectName) {\n      setMessage(\"Please fill out the project name\");\n      return;\n    }\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('projects') //name of the table where the data should be stored\n      .insert([{\n        project_name: formData.projectName,\n        project_description: formData.projectDescription,\n        created_by: userId\n      }]);\n      if (error) {\n        throw error;\n      }\n      setMessage(\"Project creation successful!\");\n\n      //closes the modal automatically after the submission\n      // setTimeout(() => {\n      //     closeModal();\n      // }, 3000);\n    } catch (error) {\n      setMessage(error.message);\n    }\n  };\n  if (!isOpen) return null; //prevents from rendering the modal if it is not open\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-modal-background\",\n    onClick: closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-modal-container\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-close-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          className: \"modal-close-button\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-modal-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Let's create a new project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-modal-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"project-modal-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-creation-form-input\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Project Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"projectName\",\n                name: \"projectName\",\n                value: formData.projectName,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-creation-form-input\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Project Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"contact-textarea\",\n                id: \"projectDescription\",\n                name: \"projectDescription\",\n                value: formData.projectDescription,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            value: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"modal-submit-button home-btn\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(ProjectModal, \"ESCmI/diAS0vwP8ca6RFIslASkk=\");\n_c = ProjectModal;\nexport default ProjectModal;\nvar _c;\n$RefreshReg$(_c, \"ProjectModal\");","map":{"version":3,"names":["React","useState","useEffect","supabase","faTimes","FontAwesomeIcon","jsxDEV","_jsxDEV","ProjectModal","isOpen","closeModal","_s","projectName","setProjectName","projectDescription","setProjectDescription","userId","setUserId","message","setMessage","formData","setFormData","handleChange","e","name","value","target","fetchUser","data","session","auth","getSession","user","id","authListener","onAuthStateChange","event","subscription","unsubscribe","handleSubmit","preventDefault","error","from","insert","project_name","project_description","created_by","className","onClick","children","stopPropagation","icon","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/Azely Athas/OneDrive/Documents/BuildSmart-CS133/frontendui/src/Components/ProjectModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./ProjectModal.css\";\r\nimport { supabase } from \"../supabase\";\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst ProjectModal = ({ isOpen, closeModal}) => {\r\n\r\n    const [projectName, setProjectName] = useState('');\r\n    const [projectDescription, setProjectDescription] = useState('');\r\n    const [userId, setUserId] = useState(null);\r\n    const [message, setMessage] = useState('')\r\n\r\n    const [formData, setFormData] = useState({\r\n        projectName: \"\",\r\n        projectDescription: \"\",\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n          ...formData,\r\n          [name]: value,\r\n        });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n          const { data: { session } } = await supabase.auth.getSession();\r\n          \r\n          if (session && session.user) {\r\n            setUserId(session.user.id);\r\n          }\r\n        };\r\n        \r\n        fetchUser();\r\n        \r\n        // Set up subscription for auth changes\r\n        const { data: authListener } = supabase.auth.onAuthStateChange(\r\n          (event, session) => {\r\n            if (session && session.user) {\r\n              setUserId(session.user.id);\r\n            } else {\r\n              setUserId(null);\r\n            }\r\n          }\r\n        );\r\n        \r\n        // Clean up subscription on unmount\r\n        return () => {\r\n          if (authListener && authListener.subscription) {\r\n            authListener.subscription.unsubscribe();\r\n          }\r\n        };\r\n      }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if(!formData.projectName){\r\n            setMessage(\"Please fill out the project name\");\r\n            return;\r\n        }\r\n    \r\n        try{\r\n            const {data, error} = await supabase\r\n            .from('projects') //name of the table where the data should be stored\r\n            .insert([\r\n                {\r\n                    project_name: formData.projectName,\r\n                    project_description: formData.projectDescription,\r\n                    created_by: userId,\r\n                },\r\n            ])\r\n    \r\n            if (error) {\r\n                throw error;\r\n            }\r\n    \r\n            setMessage(\"Project creation successful!\");\r\n    \r\n    \r\n            //closes the modal automatically after the submission\r\n            // setTimeout(() => {\r\n            //     closeModal();\r\n            // }, 3000);\r\n    \r\n        }\r\n        catch(error){\r\n            setMessage(error.message);\r\n        }\r\n    }\r\n\r\n\r\n    if (!isOpen) return null; //prevents from rendering the modal if it is not open\r\n\r\n    return(\r\n        <div className='project-modal-background' onClick={closeModal}>\r\n            <div className='project-modal-container' onClick={(e) => e.stopPropagation()}>\r\n                <div className='modal-close-icon'>\r\n                    <button onClick={closeModal} className='modal-close-button'>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </button>\r\n                </div>\r\n                <div className='project-modal-title'>\r\n                    <h2>Let's create a new project</h2>\r\n                    {message && <h3>{message}</h3>}\r\n                </div>\r\n        \r\n                <div className='project-modal-form-container'>\r\n                    <form onSubmit={handleSubmit} className='project-modal-form'>\r\n                        <div className='project-creation-form-input'>\r\n                            <label>\r\n                                Project Name: \r\n                                <input\r\n                                    type=\"text\"\r\n                                    id='projectName'\r\n                                    name=\"projectName\"\r\n                                    value={formData.projectName}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className='project-creation-form-input'>\r\n                            <label>\r\n                                Project Description:\r\n                                <textarea\r\n                                    className=\"contact-textarea\"\r\n                                    id='projectDescription'\r\n                                    name='projectDescription'\r\n                                    value={formData.projectDescription}\r\n                                    onChange={handleChange}\r\n                                ></textarea>\r\n                            </label>\r\n                        </div>\r\n                        \r\n                        \r\n\r\n                        {/* hidden input for user id */}\r\n                        <input type='hidden' value={userId}/> \r\n\r\n                        <button\r\n                            type='submit'\r\n                            className='modal-submit-button home-btn'>\r\n                            Create\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default ProjectModal;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}